name: CoverageMatrix

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  coverage:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - category: unit
            project: CoverageValue.Unit.Tests
          - category: component
            project: CoverageValue.Component.Tests
          - category: integration
            project: CoverageValue.Integration.Tests

    env:
      SOLUTION_DIR: ${{ github.workspace }}/CoverageValue

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore dependencies
        run: dotnet restore

      - name: Create coverage-results folder
        run: mkdir -p "$SOLUTION_DIR/coverage-results"
        shell: bash

      - name: Run ${{ matrix.category }} tests with coverage
        shell: pwsh
        run: |
            dotnet test tests/"${{ matrix.project }}" `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput="$SOLUTION_DIR/coverage-results/${{ matrix.project }}.xml"

      - name: Generate merged report
        shell: bash
        run: |
          reportgenerator \
            -reports:"$SOLUTION_DIR/coverage-results/*.xml" \
            -targetdir:"$SOLUTION_DIR/coverage-report" \
            -reporttypes:TextSummary,lcov

      - name: Show coverage summary
        run: type "$SOLUTION_DIR/coverage-report/Summary.txt"
